I"{<p><a href="https://fatihhayrioglu.com/google-chrome-devtools-ipuclari/">İlk yazıyı</a> yazdıktan sonra hangi özellikleri kullandığıma daha çok dikkat etmeye başladım. Hemen başlayalım. Sırayla yazalım.</p>

<h2 id="1-css-değişikliklerini-geri-almak">1. CSS değişikliklerini geri almak</h2>

<p><img src="/images/chrome-styles.gif" alt="chrome styles" /></p>

<p>Styles sekmesinde yaptığımız değişiklikleri geri almak için alışık olduğumuz kısayolu kullanabiliyoruz.</p>

<ul>
  <li>Cmd + Z (Windows/Linux: Ctrl + Z)</li>
</ul>

<h2 id="2-ekran-görüntüsü-almak">2. Ekran görüntüsü almak</h2>

<p>Daha önce bunun için eklenti kullanıyordum. DevTools bunu kendi yapıyor artık.</p>

<p><img src="/images/full-screenshot.gif" alt="chrome full screenshot" /></p>

<p>Komut menüsünü açıp Cmd+Shift+P (Mac) Ctrl+Shift+P (Windows, Linux) <strong>screenshot</strong> yazınca gelen seçeneklerden “Capture full size screenshot” tıklayınca bulunduğunuz sayfanın tam sayfa ekran görüntüsünü alabiliyoruz.</p>

<h2 id="3-sadece-belli-alanın-ekran-görüntüsünü-almak">3. Sadece belli alanın ekran görüntüsünü almak</h2>

<p><img src="/images/lokal-screenshot.gif" alt="chrome lokal screenshot" /></p>

<p>Sadece sayfanın belli bir yerinin ekran görüntüsünü almak için denetle(inspect) Command+Shift+C (Mac) veya Control+Shift+C (Windows, Linux) aktifleştirdikten sonra Command (Mac) veya Control (Windows, Linux) butonuna bastıktan sonra fare ile seçmek istediğimiz alanı bir kutu içine almamız yeterli.</p>

<h2 id="4-animasyon-tiplerini-değiştirmek">4. Animasyon tiplerini değiştirmek</h2>

<p><strong>animation-timing-function</strong> ve <strong>transition-timing-function</strong> özellikleri değerlerini DevTools üzerinden değiştirip sonuçlarını görebiliyoruz.</p>

<p><img src="/images/animasyon-tipi.gif" alt="chrome animasyon tipi degiştirmek" /></p>

<p>Solda üç adet seçim var ayrıca soldan sçeim yapınca altta sağ-sol ok çıkıyor buradan diğer değerlere geçiş yapıp sonuçlarını görebiliyoruz. Bildiğin IDE tool’u mübarek.</p>

<h2 id="5-css-değerleri-arttırmakazaltmak">5. CSS değerleri arttırmak/azaltmak</h2>

<p>DevTools <strong>Styles</strong> panelinde değişiklik yaparken çok fazla kullandığım bir özellik. İnsan değerini olmayınca anlıyor. Safari Developer Tool’unda bulmayınca çok aradım :)</p>

<p><img src="/images/arttirma-azaltma.gif" alt="devtools arttırma azaltma" /></p>

<p>Birer birer, onar onar, yüzer yüzer ve ondalık sayılarda arttırma ve azaltma kısayolları</p>

<ul>
  <li>Yukarı/Aşağı (<strong>Mac, Windows, Linux</strong>) = +/-1</li>
  <li>Alt + Yukarı/Aşağı (<strong>Mac, Windows, Linux</strong>) = +/-0.1</li>
  <li>Shift + Yukarı/Aşağı (veya PgUp/PgDn) (<strong>Mac, Windows, Linux</strong>) = +/-10</li>
  <li>Cmd + Yukarı/Aşağı (<strong>Mac</strong>) Shift + PgUp/PgDn (<strong>Windows, Linux</strong>) = +/-100</li>
</ul>

<h2 id="6-bazı-kütüphane-scriptlerini-hata-ayıklama-dışında-tutmak">6. Bazı kütüphane scriptlerini hata ayıklama dışında tutmak</h2>

<p>Javascript kodlarımızdaki hataları ayıklarken <strong>DevTools</strong> kullandığımız harici kütüphaneleri de hata ayıklama sürecine sokar, bu gibi durumlarda hata ayıklama süreçleri gereksiz fonksiyon ve kodlarda dolaşır. Bu gibi durumları engellemek için istemediğimiz script kodlarını hata ayıklama akışı dışına çıkarma imkanımız var.</p>

<p><img src="/images/jquery-disarda.gif" alt="hata ayıklama dışında tut" /></p>

<p>Ben genelde jQuery kütüphanesini hata ayıklama dışında tutuyorum.</p>

<h2 id="7-arama-yaparken-css-selector-kullanmak">7. Arama yaparken CSS selector kullanmak</h2>

<p><strong>Elements</strong> panelinden arama yaparken CSS seçicilerini kullanabiliyoruz.</p>

<p><img src="/images/css-selector.gif" alt="css seçicileri kullanma imkanı" /></p>

<p>İlk başta çok kullanmıyordum ama son zamanlarda çok işime yarıyor.</p>

<h2 id="8-html-düzenlerken-kapanış-etiketini-otomatik-değiştirmek">8. HTML düzenlerken kapanış etiketini otomatik değiştirmek</h2>

<p>Chrome DevTools’u editör gibi kullandığımız için bazı editör özelliklerini görmek sevindirici. Elements panelinden bir HTML etiketini seçip değiştirdiğimde kapatma etiketini kendi otomatik değiştirmesi çok süper.</p>

<p><img src="/images/etiket-kapma-otomatik.gif" alt="etiket kapma otomatik" /></p>

<h2 id="9-console-panelde-yakaladığım-elmanı-elements-panelinde-yakalamak">9. Console panelde yakaladığım elmanı Elements panelinde yakalamak</h2>

<p>Başlıkta yazmışım açıklamayı :)</p>

<p><img src="/images/console-element-gecis.gif" alt="console panelde seçilen eleman" /></p>

<p>Tıkladıktan sonra</p>

<p><img src="/images/console-element-gecis-2.gif" alt="console dan element paneline" /></p>

<h2 id="10-eleman-css-durumları">10. Eleman CSS durumları</h2>

<p>İlk başta yazmam gerek özelliklerden birisi. DevTools bir elemanın farklı CSS durumlarını yakalamamıza ve bu durumlara atanan özellikleri görmemiz, değiştirmemiz ve silmemize olanak sağlar.</p>

<p><img src="/images/css-status.gif" alt="CSS durumları" /></p>

<p>Yukarıda görüldüğü gibi Styles panelinde :hov bölümüne tıklayınca o elemana özel CSS durumları çıkıyor. Çıkan durumları işaretleyince altta ilgili elemanın o durmuna ait atanmış özellikler görülecektir.</p>

<h2 id="kaynaklar">Kaynaklar</h2>

<ul>
  <li><a href="https://www.credera.com/blog/type/article/five-things-you-didnt-know-google-chrome-could-do/">https://www.credera.com/blog/type/article/five-things-you-didnt-know-google-chrome-could-do/</a></li>
  <li>devtoolstips.com/post/101751680221/blackbox-scripts-when-youre-stepping-through</li>
  <li><a href="https://umaar.com/dev-tips/7-dom-search-by-selector/">https://umaar.com/dev-tips/7-dom-search-by-selector/</a></li>
  <li><a href="https://umaar.com/dev-tips/17-quick-edit-element/">https://umaar.com/dev-tips/17-quick-edit-element/</a></li>
  <li><a href="https://umaar.com/dev-tips/20-reveal-in-elements/">https://umaar.com/dev-tips/20-reveal-in-elements/</a></li>
</ul>
:ET